import{_ as n,o as s,c as a,b as t}from"./app-491f955e.js";const p={},e=t(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Ajax（Asynchronous JavaScript and XML）是一种用于创建异步Web应用程序的技术。它在不重新加载整个页面的情况下，通过在后台与服务器进行数据交换，实现网页的局部更新。</p><p>传统的Web应用程序在与服务器进行数据交换时，需要重新加载整个页面。而使用Ajax可以避免这种情况，提升用户的交互体验和网页的响应速度。通过Ajax，可以在后台异步地向服务器发送请求并接收响应，然后使用JavaScript将返回的数据更新到网页的特定部分，而不需要刷新整个页面。</p><p>最早的Ajax技术使用XML作为数据交换格式，因此有&quot;XML&quot;占据了其首字母。然而，随着JSON的流行，现代的Ajax应用程序一般使用JSON作为数据交换的格式。此外，随着技术的发展，出现了许多工具和框架，如jQuery、Fetch API和Axios，使得使用Ajax更加方便和高效。</p><p>Ajax可以用于许多应用场景，比如获取和显示数据、异步提交表单、自动完成建议、动态内容加载等等。然而，由于浏览器的安全策略，Ajax请求通常不能跨域，需要进行特殊处理。此外，安全性方面也需要考虑，以防止跨站脚本攻击（XSS）和跨站请求伪造（CSRF）等风险。</p><p>总而言之，Ajax是一种强大的Web开发技术，可以帮助开发者提升用户体验、增强应用程序性能并提高效率。</p><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><ol><li><p>创建XMLHttpRequest对象：使用JavaScript创建一个Ajax请求对象，可以通过<code>new XMLHttpRequest()</code>来实现。</p></li><li><p>发送请求：使用该对象向服务器发送请求，通过<code>open()</code>方法设置请求的类型（GET、POST等）、URL和是否使用异步（true或false）等参数。然后使用<code>send()</code>方法发送请求，可以传递需要发送的数据作为参数。</p></li><li><p>服务器处理请求：服务器接收到请求后，处理请求并生成响应数据。</p></li><li><p>接收响应：当服务器返回响应时，<code>XMLHttpRequest</code>对象会触发<code>onreadystatechange</code>事件，并通过<code>readyState</code>属性来指示请求的状态。常见的状态有：</p><ul><li><code>0: 请求未初始化</code></li><li><code>1: 服务器连接已建立</code></li><li><code>2: 请求已接收</code></li><li><code>3: 请求处理中</code></li><li><code>4: 请求已完成，且响应已就绪</code></li></ul></li><li><p>处理响应数据：在<code>readyState</code>为4且状态码为200时（表示请求成功），可以通过<code>responseText</code>属性获取服务器返回的文本数据，或使用<code>responseXML</code>属性获取解析后的XML数据（如果服务器返回的是XML格式）。可以使用JavaScript编写回调函数来处理响应数据，进行更新页面或其他操作。</p></li><li><p>更新页面：使用获取到的数据，通过JavaScript将其更新到页面的特定部分，实现局部刷新而不需要重新加载整个页面。</p></li></ol><p>总的来说，Ajax通过在后台与服务器进行数据交换，实现了异步的数据传输和局部刷新网页的功能。这就使得用户能够在数据加载的同时进行其他操作，提高了用户体验和网页性能。</p><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h2><p>Ajax具有许多优点，使其成为开发Web应用程序的受欢迎的技术之一。</p><ol><li><p>提升用户体验：使用Ajax可以实现网页的局部更新，而不需要重新加载整个页面。这大大减少了页面的刷新次数，提高了用户的交互体验。用户可以在进行数据交互的同时继续浏览和操作页面，无需等待整个页面的重载。</p></li><li><p>增强性能：Ajax通过异步发送请求和接收响应的方式，无需刷新整个页面，只传输和处理必要的数据量。相比于传统的页面刷新方式，减少了对服务器的请求次数和数据传输量，从而减轻了服务器的负载压力，提高了网页的加载速度和响应速度。</p></li><li><p>提高效率：通过Ajax，可以在后台发送异步请求并在返回响应后处理数据，无需阻塞用户界面。用户可以在数据交互的同时继续进行其他操作，不需要等待整个页面的重载。这种异步处理方式提高了用户效率和使用体验。</p></li><li><p>优化用户界面：Ajax可以实现动态的页面更新，使得可以根据用户的操作实时改变页面内容，从而提供更加流畅和灵活的用户交互体验。可以根据用户的输入或者在后台请求到的数据进行页面内容的动态刷新，而无需重新加载整个页面。</p></li><li><p>减少带宽占用：Ajax通过局部刷新而不是整个页面的重新加载，从而在数据交互过程中减少了不必要的带宽占用。只传输和处理必要的数据，可以节省带宽资源。</p></li></ol><p>综上所述，Ajax的优点包括提升用户体验、增强性能、提高效率、优化用户界面和减少带宽占用等。这些优点使得Ajax成为开发现代Web应用程序的重要技术之一。</p><h2 id="相关技术和工具" tabindex="-1"><a class="header-anchor" href="#相关技术和工具" aria-hidden="true">#</a> 相关技术和工具</h2><ol><li><p>XMLHttpRequest：XMLHttpRequest是原始的Ajax实现方式，它是浏览器提供的内置对象，用于发送HTTP请求和接收服务器响应。通过XHR对象，可以设置请求类型、URL、发送数据等，并通过回调函数处理响应数据。</p></li><li><p>Fetch API：Fetch API是一种现代的替代XMLHttpRequest的技术，它提供了更简洁和强大的API来发送HTTP请求和处理响应。Fetch API使用Promise对象来处理异步操作，并且提供了更灵活和可读性更好的语法。</p></li><li><p>jQuery：jQuery是一种流行的JavaScript库，提供了简化和封装了许多常见的JavaScript操作，并提供了简便的Ajax方法。通过使用jQuery的<code>$.ajax()</code>或<code>$.getJSON()</code>等方法，可以更快速地实现Ajax请求和处理响应。</p></li><li><p>Axios：Axios是一个流行的基于Promise的HTTP客户端，可以在浏览器和Node.js中使用。它提供了简单而直观的API，使得发送Ajax请求变得更加简单和灵活。</p></li><li><p>JSON：JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，广泛用于Ajax应用中进行数据传输和解析。JSON易于阅读和编写，并且与JavaScript对象格式兼容，因此非常适合在服务器和客户端之间传输数据。</p></li><li><p>WebSocket：WebSocket是一种在单个TCP连接上进行全双工通信的通信协议。与Ajax不同，WebSocket支持服务器主动向客户端推送数据，使得实时通信变得更加便捷和高效。</p></li><li><p>Single Page Application (SPA)：SPA是一种Web应用程序的架构模式，通过使用Ajax或类似的技术，将Web应用程序整体加载到一个页面中，并利用Ajax进行局部更新，使得应用程序具有更快的响应速度和更好的用户体验。</p></li></ol><p>总而言之，这些技术和工具与Ajax密切相关，可以帮助开发者更方便地实现Ajax请求和处理响应，并提供更好的用户体验和更高的开发效率。</p><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h2><h3 id="获取并显示数据" tabindex="-1"><a class="header-anchor" href="#获取并显示数据" aria-hidden="true">#</a> 获取并显示数据</h3><p>通过Ajax从服务器获取数据，然后使用JavaScript将其显示在网页上。</p><p>HTML部分：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>获取数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>JavaScript部分：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建XMLHttpRequest对象</span>
  <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 设置请求的类型、URL和异步标志(true表示异步)</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data.json&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 注册状态改变的事件回调函数</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">displayData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 发送请求</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">displayData</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> resultDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  resultDiv<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> item <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token punctuation">.</span>textContent <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    resultDiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码中，点击&quot;获取数据&quot;按钮会调用<code>getData()</code>函数，通过Ajax发送GET请求到服务器上的<code>data.json</code>文件来获取数据。获取到数据后，调用<code>displayData()</code>函数将数据显示在页面上。</p><h3 id="表单提交" tabindex="-1"><a class="header-anchor" href="#表单提交" aria-hidden="true">#</a> 表单提交</h3><p>使用Ajax异步提交表单，避免页面的刷新。</p><p>HTML部分：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token special-attr"><span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">submitForm</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>姓名<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>电子邮件<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JavaScript部分：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">submitForm</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 阻止表单的默认提交行为</span>

  <span class="token keyword">var</span> form <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">;</span>
  <span class="token keyword">var</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;submit.php&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> response <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>
      <span class="token function">alert</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 显示服务器的响应</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码中，通过在表单的<code>onsubmit</code>事件上调用<code>submitForm()</code>函数来处理表单的提交。在<code>submitForm()</code>函数中，调用<code>preventDefault()</code>方法阻止表单的默认提交行为，然后使用<code>FormData</code>对象来获取表单中的数据。创建一个XMLHttpRequest对象，以POST方式发送表单数据到服务器上的<code>submit.php</code>文件，通过<code>onreadystatechange</code>事件回调函数来处理服务器的响应。</p><h3 id="自动完成" tabindex="-1"><a class="header-anchor" href="#自动完成" aria-hidden="true">#</a> 自动完成</h3><p>通过Ajax从服务器请求数据建议，并在用户输入时显示自动完成的列表。</p><p>HTML部分：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>搜索...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suggestions<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>JavaScript部分：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> searchInput <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> suggestionsList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;suggestions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

searchInput<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> keyword <span class="token operator">=</span> searchInput<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

  <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;suggestions.php?keyword=&quot;</span> <span class="token operator">+</span> keyword<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> suggestions <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">showSuggestions</span><span class="token punctuation">(</span>suggestions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">showSuggestions</span><span class="token punctuation">(</span><span class="token parameter">suggestions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  suggestionsList<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 清空之前的建议</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> suggestions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> suggestionItem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    suggestionItem<span class="token punctuation">.</span>textContent <span class="token operator">=</span> suggestions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    suggestionsList<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>suggestionItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码中，当用户在搜索框中输入时，通过<code>input</code>事件监听器获取输入的关键字，然后发送GET请求到服务器上的<code>suggestions.php</code>文件，使用<code>onreadystatechange</code>事件回调函数处理服务器返回的建议数据，并调用<code>showSuggestions()</code>函数来显示建议。</p><h3 id="动态内容加载" tabindex="-1"><a class="header-anchor" href="#动态内容加载" aria-hidden="true">#</a> 动态内容加载</h3><p>通过Ajax加载更多的内容，实现无限滚动效果。</p><p>HTML部分：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">loadMore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>加载更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>JavaScript部分：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> contentDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">loadMore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> response <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> newContent <span class="token operator">=</span> response<span class="token punctuation">.</span>content<span class="token punctuation">;</span>
      contentDiv<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> newContent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://example.com/load-more&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CSS部分:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#content</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码实现了一个简单的无限滚动效果。点击&quot;加载更多&quot;按钮会发送一个Ajax请求到<code>https://example.com/load-more</code>，服务器返回的内容会追加到<code>#content</code>元素中。CSS部分定义了一个固定高度并且具有纵向滚动条的容器。</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><ol><li><p>加载数据时要避免频繁的请求，可以设置一个适当的间隔时间或者使用节流函数来控制请求的频率，以免给服务器过大的负担或者消耗用户过多的流量。</p></li><li><p>在发送请求之前，可以检查是否还有更多内容要加载。可以通过返回的数据中的一个字段或者变量来标志是否还有更多内容。如果没有更多内容，可以禁用加载按钮或者进行其他处理。</p></li><li><p>在加载新内容之前，可以显示一个加载提示，以免用户觉得页面无反应或者空白，提高用户体验。</p></li><li><p>如果有大量数据要加载，可以考虑分页加载或者按需加载的方式，避免一次性加载过多数据导致页面卡顿或者性能问题。</p></li><li><p>在处理服务器返回的数据时，要进行适当的错误处理，包括网络请求错误、服务器错误或者返回数据格式错误等，以提高程序的稳定性和健壮性。</p></li><li><p>在加载新内容时，要考虑页面布局或者样式的调整，以适应新内容的加入，特别是如果加载的内容具有不同的高度或者宽度时。</p></li><li><p>跨域请求：由于浏览器的同源策略，Ajax请求通常不能跨域，需要进行特殊处理。</p></li><li><p>安全性考虑：Ajax请求可能会引发一些安全问题，比如跨站脚本攻击（XSS）和跨站请求伪造（CSRF），需要注意防范。</p></li></ol>`,49),o=[e];function c(u,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","ajax.html.vue"]]);export{k as default};
