import{_ as s,o as n,c as a,b as e}from"./app-491f955e.js";const p={},t=e(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>SCSS（Sassy CSS）是一种CSS的扩展语言，它在CSS的基础上添加了许多功能和语法，使得样式表的编写更加灵活、高效和易于维护。</p><h2 id="特点和优势" tabindex="-1"><a class="header-anchor" href="#特点和优势" aria-hidden="true">#</a> 特点和优势</h2><ol><li><p>可读性：SCSS采用类似CSS的语法，使得开发者可以轻松理解和使用。它支持使用大括号和分号等常见的CSS语法元素。</p></li><li><p>嵌套规则：在SCSS中，可以使用嵌套规则来组织样式，使得代码更加清晰和结构化。嵌套规则可以减少选择器的重复，提高代码的可读性。</p></li><li><p>变量：SCSS引入了变量的概念，可以方便地定义和重用样式中的值。使用变量可以减少代码中的重复和冗余，并且使得样式的修改更加方便和快捷。</p></li><li><p>混合（Mixin）：Mixin是SCSS中的一个强大特性，可以将一组样式应用于多个选择器，实现样式的复用。使用Mixin可以减少代码的重复，提高代码的可维护性。</p></li><li><p>继承（Extend）：继承是SCSS中定义样式的一种方式，它可以使一个选择器继承另一个选择器的样式。继承可以减少生成的CSS代码的大小，并且使得样式的维护更加方便。</p></li><li><p>导入（Import）：SCSS支持使用<code>@import</code>导入其他SCSS文件，使得样式的拆分和组织更加灵活。导入可以帮助开发者模块化地管理样式表，提高代码的可维护性。</p></li><li><p>条件语句：SCSS支持使用条件语句，可以根据条件包含或排除一些样式。条件语句使得样式的编写更加灵活和动态化。</p></li><li><p>运算符和函数：SCSS支持使用数学运算符和内置函数，对数值进行计算和处理。这使得样式表的编写更加灵活和强大。</p></li></ol><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>首先，确保你已经安装了Node.js。你可以从Node.js官方网站（<a href="https://nodejs.org/%EF%BC%89%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85%E3%80%82" target="_target" rel="nofollow noopener noreferrer">https://nodejs.org/）下载并安装。</a> 打开命令提示符或PowerShell，并运行以下命令来安装Sass：<code>npm install -g sass</code></p><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h2><p>SCSS使用了与CSS类似的基本语法，同时还添加了一些额外的功能和语法来增强CSS的编写和维护能力。</p><ol><li><p>选择器： 在SCSS中，选择器用于选择要应用样式的HTML元素。选择器的语法与CSS相同，例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">h1 </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.container </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>属性和值： 在SCSS中，属性用于定义要应用的样式特性，而值表示这些特性的具体表现。与CSS一样，使用<code>:</code>符号来将属性与值分隔，并用<code>;</code>结束每个属性-值对。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.title </span><span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>嵌套规则： SCSS允许你将CSS规则嵌套在其他规则内部，以提高代码的可读性和结构性。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.container </span><span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>

  <span class="token selector">h1 </span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">p </span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>变量： 在SCSS中，使用<code>$</code>符号来定义变量，并使用变量名称来引用它们。变量可以存储颜色、数值、文本等任意类型的值。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$primary-color</span></span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$font-size</span></span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>

<span class="token selector">.title </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$primary-color</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$font-size</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>混合（Mixin）： 混合是一种在SCSS中定义和重用一组样式的机制。混合使用<code>@mixin</code>关键字定义，并使用<code>@include</code>指令引用。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token selector">button </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.primary-button </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> button<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>继承（Extend）： 继承可用于将一个选择器的样式属性应用于另一个选择器。使用<code>@extend</code>指令来实现继承。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.title </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.highlighted-title </span><span class="token punctuation">{</span>
  <span class="token keyword">@extend</span> .title<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>导入其他文件： 在SCSS中，可以使用<code>@import</code>指令导入其他SCSS文件。这对于模块化组织样式表非常有用。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&quot;variables&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">@import</span> <span class="token string">&quot;layout&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">@import</span> <span class="token string">&quot;components/buttons&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="嵌套规则" tabindex="-1"><a class="header-anchor" href="#嵌套规则" aria-hidden="true">#</a> 嵌套规则</h2><p>嵌套规则是SCSS中的一项功能，它允许你将CSS规则嵌套在其他规则内部。这种嵌套结构可以提高代码的可读性和结构性，使代码更具层次结构。</p><ol><li><p>嵌套选择器： 在SCSS中，可以在一个选择器内嵌套其他选择器。内部选择器将继承外部选择器的样式，并形成更具层次结构的CSS规则。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.container </span><span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>

  <span class="token selector">h1 </span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">p </span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译后的CSS代码如下所示：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.container h1</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.container p</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>父级选择器引用： 在嵌套规则中，可以使用<code>&amp;</code>符号引用父级选择器。这样，你可以在嵌套规则中使用父级选择器来构建特定的样式。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.button </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>

  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #ffaaaa<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译后的CSS代码如下所示：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.button</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.button:hover</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #ffaaaa<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>嵌套属性： 在SCSS中，还可以使用嵌套规则来嵌套属性。这样可以更好地组织相关的属性，并使代码更易于阅读和维护。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.box </span><span class="token punctuation">{</span>
  <span class="token selector">font: </span><span class="token punctuation">{</span>
    <span class="token property">weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
    <span class="token property">size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
    <span class="token property">family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">margin: </span><span class="token punctuation">{</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译后的CSS代码如下所示：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><p>变量是一种用于存储和重复使用值的机制。通过使用变量，你可以在样式表中定义一次值，并在后续的代码中多次引用它，从而简化样式的编写和维护。</p><ol><li><p>定义变量： 在SCSS中，使用<code>$</code>符号来定义一个变量，并赋予它一个值。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$primary-color</span></span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$font-size</span></span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用变量： 使用定义好的变量，可以在样式中多次引用相同的值。在SCSS中，只需要使用变量的名称，而不需要再次指定具体的值。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.title </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$primary-color</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$font-size</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>全局变量： 默认情况下，变量在定义的作用域内有效，称为局部变量。如果你希望一个变量在整个样式表中都可用，可以使用<code>!global</code>关键字将变量定义为全局变量。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$primary-color</span></span><span class="token punctuation">:</span> #ff0000 !global<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>变量插值： 变量插值可以在样式中动态地插入变量的值。使用<code>#{}</code>语法将变量插入到字符串中，例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.message </span><span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;The primary color is #{$primary-color}.&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>默认值： 可以为变量设置默认值，以防止变量未在使用前被定义。使用<code>!default</code>关键字来指定一个变量的默认值。例如：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$primary-color</span></span><span class="token punctuation">:</span> #ff0000 <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>变量的命名规则：</p><ul><li>变量名可以包含字母、数字、下划线和破折号。</li><li>变量名不应以数字开头。</li><li>驼峰命名法或破折号命名法都可用，但要在整个样式表中保持一致。</li></ul></li></ol><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><ol><li>数字类型（Number）：表示数值，可以是整数或浮点数。例如，<code>12</code>、<code>3.14</code>。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$font-size</span></span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$line-height</span></span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>字符串类型（String）：表示一串字符组成的数据，可以使用双引号或单引号括起来。例如，<code>&quot;Hello&quot;</code>、<code>&#39;World&#39;</code>。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$font-family</span></span><span class="token punctuation">:</span> <span class="token string">&quot;Arial&quot;</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$image-path</span></span><span class="token punctuation">:</span> <span class="token string">&quot;../images/&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>布尔类型（Boolean）：表示逻辑值，只能取两个值之一：<code>true</code>或<code>false</code>。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$show-button</span></span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$enable-hover</span></span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>颜色类型（Color）：表示颜色值，可以是预定义的颜色名称、十六进制值或者通过函数生成的颜色值。例如，<code>red</code>、<code>#ff0000</code>、<code>rgba(255, 0, 0, 0.5)</code>。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$colors</span></span><span class="token punctuation">:</span> red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> blue<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$dimensions</span></span><span class="token punctuation">:</span> 10px<span class="token punctuation">,</span> 20px<span class="token punctuation">,</span> 30px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>列表类型（List）：表示一组值的有序集合，值之间用逗号分隔。列表可以包含不同的数据类型。例如，<code>(1, 2, 3)</code>、<code>(red, #ff0000, rgba(255, 0, 0, 0.5))</code>。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$colors</span></span><span class="token punctuation">:</span> red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> blue<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$dimensions</span></span><span class="token punctuation">:</span> 10px<span class="token punctuation">,</span> 20px<span class="token punctuation">,</span> 30px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>映射类型（Map）：表示一组键值对的集合，可以将某个键映射到相应的值。例如，<code>(key1: value1, key2: value2)</code>。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$breakpoints</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token property">small</span><span class="token punctuation">:</span> 480px<span class="token punctuation">,</span>
  <span class="token property">medium</span><span class="token punctuation">:</span> 768px<span class="token punctuation">,</span>
  <span class="token property">large</span><span class="token punctuation">:</span> 1024px<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>空类型（Null）：表示空值或未定义的值。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$null</span></span><span class="token punctuation">:</span> <span class="token null keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="运算" tabindex="-1"><a class="header-anchor" href="#运算" aria-hidden="true">#</a> 运算</h2><ol><li>数字运算：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$width</span></span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$height</span></span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$area</span></span><span class="token punctuation">:</span> <span class="token variable">$width</span> <span class="token operator">*</span> <span class="token variable">$height</span><span class="token punctuation">;</span> <span class="token comment">// 计算面积</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>字符串拼接：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$prefix</span></span><span class="token punctuation">:</span> <span class="token string">&quot;btn&quot;</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$button-class</span></span><span class="token punctuation">:</span> <span class="token variable">$prefix</span> <span class="token operator">+</span> <span class="token string">&quot;-primary&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 拼接类名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>颜色运算：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$color1</span></span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$color2</span></span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$color3</span></span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span><span class="token variable">$color1</span><span class="token punctuation">,</span> <span class="token variable">$color2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 混合两个颜色</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>列表操作：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$dimensions</span></span><span class="token punctuation">:</span> 10px 20px 30px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$first-dimension</span></span><span class="token punctuation">:</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$dimensions</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取列表中的第一个值（10px）</span>
<span class="token property"><span class="token variable">$length</span></span><span class="token punctuation">:</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token variable">$dimensions</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取列表的长度（3）</span>
<span class="token property"><span class="token variable">$concatenated-list</span></span><span class="token punctuation">:</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$dimensions</span><span class="token punctuation">,</span> 40px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向列表追加一个值（10px 20px 30px 40px）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><h3 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数" aria-hidden="true">#</a> 内置函数</h3><ol><li>颜色函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$color</span></span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$lighter-color</span></span><span class="token punctuation">:</span> <span class="token function">lighten</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> 20%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使颜色变亮</span>
<span class="token property"><span class="token variable">$darker-color</span></span><span class="token punctuation">:</span> <span class="token function">darken</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> 20%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使颜色变暗</span>
<span class="token property"><span class="token variable">$transparent-color</span></span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置颜色透明度</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>字符串函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$text</span></span><span class="token punctuation">:</span> <span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$length</span></span><span class="token punctuation">:</span> <span class="token function">str-length</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取字符串长度</span>
<span class="token property"><span class="token variable">$upper-case</span></span><span class="token punctuation">:</span> <span class="token function">to-upper-case</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将字符串转换为大写</span>
<span class="token property"><span class="token variable">$lower-case</span></span><span class="token punctuation">:</span> <span class="token function">to-lower-case</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将字符串转换为小写</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>数学函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$number</span></span><span class="token punctuation">:</span> 3.14159<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$rounded-number</span></span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 四舍五入</span>
<span class="token property"><span class="token variable">$absolute-number</span></span><span class="token punctuation">:</span> <span class="token function">abs</span><span class="token punctuation">(</span>-<span class="token variable">$number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取绝对值</span>
<span class="token property"><span class="token variable">$random-number</span></span><span class="token punctuation">:</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成随机数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>列表函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$colors</span></span><span class="token punctuation">:</span> red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> blue<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$length</span></span><span class="token punctuation">:</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token variable">$colors</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取列表长度</span>
<span class="token property"><span class="token variable">$nth-color</span></span><span class="token punctuation">:</span> <span class="token function">nth</span><span class="token punctuation">(</span><span class="token variable">$colors</span><span class="token punctuation">,</span> 2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取列表中的第二个值</span>
<span class="token property"><span class="token variable">$joined-list</span></span><span class="token punctuation">:</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token variable">$colors</span><span class="token punctuation">,</span> yellow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 合并两个列表</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>条件函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$value</span></span><span class="token punctuation">:</span> 10<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$is-positive</span></span><span class="token punctuation">:</span> <span class="token function">if</span><span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token operator">&gt;</span> 0<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 根据条件返回值</span>
<span class="token property"><span class="token variable">$bg-color</span></span><span class="token punctuation">:</span> <span class="token function">if</span><span class="token punctuation">(</span><span class="token variable">$is-positive</span><span class="token punctuation">,</span> green<span class="token punctuation">,</span> red<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 根据条件设置背景颜色</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>字符串操作函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$name</span></span><span class="token punctuation">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$substring</span></span><span class="token punctuation">:</span> <span class="token function">str-slice</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> 5<span class="token punctuation">,</span> 8<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 提取子字符串</span>
<span class="token property"><span class="token variable">$replace</span></span><span class="token punctuation">:</span> <span class="token function">str-replace</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token string">&quot;Doe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Smith&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 替换字符串中的指定内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>数字处理函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$percentage</span></span><span class="token punctuation">:</span> <span class="token function">percentage</span><span class="token punctuation">(</span>0.75<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将小数转换为百分比</span>
<span class="token property"><span class="token variable">$rem</span></span><span class="token punctuation">:</span> <span class="token function">unit</span><span class="token punctuation">(</span>16px<span class="token punctuation">,</span> rem<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 转换单位为rem</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>集合函数：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$numbers</span></span><span class="token punctuation">:</span> 1<span class="token punctuation">,</span> 2<span class="token punctuation">,</span> 3<span class="token punctuation">,</span> 4<span class="token punctuation">,</span> 5<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$max-number</span></span><span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取集合中的最大值</span>
<span class="token property"><span class="token variable">$min-number</span></span><span class="token punctuation">:</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取集合中的最小值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数指令" tabindex="-1"><a class="header-anchor" href="#函数指令" aria-hidden="true">#</a> 函数指令</h3><p>函数指令允许你创建和使用自定义函数来处理样式的值。函数指令以 <code>@function</code> 开头，后跟函数名和参数。创建和使用函数指令的示例：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 创建一个函数来计算元素宽度的百分比</span>
<span class="token keyword">@function</span> <span class="token function">calculate-width</span><span class="token punctuation">(</span><span class="token variable">$target</span><span class="token punctuation">,</span> <span class="token variable">$container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">@return</span> <span class="token punctuation">(</span><span class="token variable">$target</span> <span class="token operator">/</span> <span class="token variable">$container</span><span class="token punctuation">)</span> <span class="token operator">*</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 使用函数</span>
<span class="token selector">.container </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calculate-width</span><span class="token punctuation">(</span>500px<span class="token punctuation">,</span> 1000px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建了一个名为 <code>calculate-width</code> 的函数，它接受两个参数 <code>$target</code> 和 <code>$container</code>。函数通过计算 <code>$target</code> 占 <code>$container</code> 的百分比来返回一个值。</p><p>然后，在 <code>.container</code> 类选择器中，我们使用 <code>calculate-width</code> 函数来计算宽度的百分比。在这种情况下，使用 <code>calculate-width(500px, 1000px)</code> 将返回 <code>50%</code>，作为 <code>.container</code> 元素的宽度。</p><h2 id="插值语句" tabindex="-1"><a class="header-anchor" href="#插值语句" aria-hidden="true">#</a> 插值语句</h2><p>插值语句允许你在样式表中动态地插入变量、表达式和函数的值。插值语句使用<code>#{}</code>语法，并将要插入的内容放在花括号中。</p><ol><li>插入变量：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$color</span></span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
<span class="token selector">.selector </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">#{$color}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>插入表达式：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$width</span></span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$height</span></span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
<span class="token selector">.selector </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> #<span class="token punctuation">{</span><span class="token variable">$width</span> <span class="token operator">+</span> <span class="token variable">$height</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>插入函数的返回值：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$color</span></span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>
<span class="token selector">.selector </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">lighten</span><span class="token punctuation">(</span><span class="token variable">#{$color}</span><span class="token punctuation">,</span> 20%<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>插入选择器：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$prefix</span></span><span class="token punctuation">:</span> <span class="token string">&quot;container&quot;</span><span class="token punctuation">;</span>
<span class="token selector">.selector </span><span class="token punctuation">{</span>
  <span class="token selector"><span class="token parent important">&amp;</span>-<span class="token variable">#{$prefix}</span> </span><span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="控制" tabindex="-1"><a class="header-anchor" href="#控制" aria-hidden="true">#</a> 控制</h2><p>可以使用控制流指令来根据不同的条件执行不同的操作，这样可以使你的样式表更加灵活和动态。</p><ol><li>@if 指令： @if指令允许你根据条件执行一组样式规则。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$has-children</span></span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token selector">.selector </span><span class="token punctuation">{</span>
  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$has-children</span> </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">@else</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>@for 指令： @for指令允许你迭代生成样式规则。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$num-items</span></span><span class="token punctuation">:</span> 5<span class="token punctuation">;</span>

<span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 1 <span class="token keyword">through</span> <span class="token selector"><span class="token variable">$num-items</span> </span><span class="token punctuation">{</span>
  <span class="token selector">.item-<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 20px <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>@each 指令： @each指令允许你循环遍历列表并生成样式规则。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$colors</span></span><span class="token punctuation">:</span> red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> blue<span class="token punctuation">;</span>

<span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$color</span> in <span class="token variable">$colors</span> </span><span class="token punctuation">{</span>
  <span class="token selector">.box-<span class="token variable">#{$color}</span> </span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>@while 指令： @while指令允许你在满足条件的情况下循环执行样式规则。</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$max-width</span></span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$width</span></span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>

<span class="token keyword">@while</span> <span class="token selector"><span class="token variable">$width</span> &lt; <span class="token variable">$max-width</span> </span><span class="token punctuation">{</span>
  <span class="token selector">.box </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$width</span><span class="token punctuation">;</span>
    <span class="token property"><span class="token variable">$width</span></span><span class="token punctuation">:</span> <span class="token variable">$width</span> <span class="token operator">+</span> 10<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="混合" tabindex="-1"><a class="header-anchor" href="#混合" aria-hidden="true">#</a> 混合</h2><p>混合（Mixins）是一种可重用的代码块，类似于函数。通过定义混合，你可以将一组样式规则封装起来，并在需要的地方引用它们，从而减少样式代码的重复性，提高代码的可维护性。</p><ol><li>定义混合：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token selector">flex-container </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>引用混合：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.header </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> flex-container<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.sidebar </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> flex-container<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>带参数的混合：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">text-color</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.title </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> <span class="token function">text-color</span><span class="token punctuation">(</span>red<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.subtitle </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> <span class="token function">text-color</span><span class="token punctuation">(</span>blue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>默认参数的混合：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">button</span><span class="token punctuation">(</span><span class="token property"><span class="token variable">$background-color</span></span><span class="token punctuation">:</span> blue<span class="token punctuation">,</span> <span class="token property"><span class="token variable">$color</span></span><span class="token punctuation">:</span> white<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$background-color</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.primary-button </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> button<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.secondary-button </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> <span class="token function">button</span><span class="token punctuation">(</span>green<span class="token punctuation">,</span> black<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h2><p>在Sass中，继承是一种通过基础样式定义和重用样式规则的方式。它可以帮助你减少样式代码的冗余并提高样式表的可维护性。继承的示例：</p><ol><li>定义基础样式：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.base-style </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.heading </span><span class="token punctuation">{</span>
  <span class="token keyword">@extend</span> .base-style<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>继承样式：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.error-message </span><span class="token punctuation">{</span>
  <span class="token keyword">@extend</span> .base-style<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.warning-message </span><span class="token punctuation">{</span>
  <span class="token keyword">@extend</span> .base-style<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.base-style</code> 是一个基础样式，它定义了一些通用的样式规则。通过 <code>@extend</code> 指令，我们可以将 <code>.base-style</code> 的样式规则继承到其他选择器中，如 <code>.heading</code>、<code>.error-message</code> 和 <code>.warning-message</code>。这些选择器可以继承并扩展 <code>.base-style</code> 的样式，同时还可以添加自己的样式规则。</p><p>继承可以减少样式代码的重复，同时保持样式的一致性。当你需要修改基础样式时，所有继承了该样式的选择器也会自动更新。这使得维护样式表变得更加简单和高效。</p><h2 id="导入" tabindex="-1"><a class="header-anchor" href="#导入" aria-hidden="true">#</a> 导入</h2><p>可以使用<code>@import</code>指令导入其他Sass文件。这使你能够将样式表分成多个文件，提高代码的可维护性和可重用性。</p><ol><li>导入其他Sass文件：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&#39;reset&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 导入名为 _reset.scss 的文件</span>

<span class="token keyword">@import</span> <span class="token string">&#39;variables&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 导入名为 _variables.scss 的文件</span>

<span class="token keyword">@import</span> <span class="token string">&#39;components/button&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 导入名为 _button.scss 的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>相对路径导入：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&#39;./components/button&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 相对当前目录导入</span>

<span class="token keyword">@import</span> <span class="token string">&#39;../utils/mixins&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 相对父级目录导入</span>

<span class="token keyword">@import</span> <span class="token string">&#39;../../styles/variables&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 相对更上级目录导入</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>导入整个目录：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&#39;components/*&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 导入 components 目录下的所有文件</span>

<span class="token keyword">@import</span> <span class="token string">&#39;styles/**/*&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 导入 styles 目录及其子目录下的所有文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>导入CSS文件：</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&#39;styles.css&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 导入名为 styles.css 的CSS文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Sass中的<code>@import</code>指令会在编译时将导入的内容合并到一个输出文件中，这样浏览器只需加载一个CSS文件。这是与普通CSS的一个区别，因为普通的CSS使用<code>@import</code>指令会导致多个请求和加载时间的增加。</p><h2 id="媒体查询" tabindex="-1"><a class="header-anchor" href="#媒体查询" aria-hidden="true">#</a> 媒体查询</h2><p>媒体查询可以与普通的CSS语法一起使用。你可以利用Sass的变量、嵌套和混合等功能来更方便地编写和管理媒体查询。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 定义媒体查询的变量</span>
<span class="token property"><span class="token variable">$mobile-max</span></span><span class="token punctuation">:</span> 767px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$tablet-min</span></span><span class="token punctuation">:</span> 768px<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$desktop-min</span></span><span class="token punctuation">:</span> 992px<span class="token punctuation">;</span>

<span class="token comment">// 在样式规则中使用媒体查询</span>
<span class="token selector">body </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>

  <span class="token atrule"><span class="token rule">@media</span> screen <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token variable">$tablet-min</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token atrule"><span class="token rule">@media</span> screen <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token variable">$desktop-min</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> lightyellow<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先定义了媒体查询的断点变量 <code>$mobile-max</code>、<code>$tablet-min</code> 和 <code>$desktop-min</code>，分别表示移动设备的最大宽度、平板设备的最小宽度和桌面设备的最小宽度。</p><p>然后，在样式规则中使用 <code>@media</code> 嵌套语法，根据不同的断点应用不同的样式。例如，当屏幕宽度大于等于 <code>$tablet-min</code> 时，背景色将变为 lightgreen；当屏幕宽度大于等于 <code>$desktop-min</code> 时，背景色将变为 lightyellow。</p>`,116),c=[t];function l(o,i){return n(),a("div",null,c)}const r=s(p,[["render",l],["__file","scss.html.vue"]]);export{r as default};
